//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.508, BuildCommit: 5831334d9)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.440.1.0.0
//
#ifndef MRDistantExternalDevice_h
#define MRDistantExternalDevice_h
@import Foundation;

#include "MRAVDistantEndpoint.h"
#include "MRAVDistantExternalDeviceClientProtocol-Protocol.h"
#include "MRDeviceInfo.h"
#include "MRExternalDevice.h"
#include "MRExternalOutputContextDataSource.h"
#include "MRGroupSessionToken.h"
#include "MROrigin.h"

@class MRAVDistantEndpoint;

@protocol OS_dispatch_queue;

@interface MRDistantExternalDevice : MRExternalDevice <MRAVDistantExternalDeviceClientProtocol> {
    /* instance variables */
    NSObject<OS_dispatch_queue> *_workerQueue;
    NSObject<OS_dispatch_queue> *_serialQueue;
    struct os_unfair_lock_s {
        unsigned int _os_unfair_lock_opaque;
    } _distantEndpointLock;
    unsigned long long _deviceNotifications;
    NSDate *_connectionStateDate;
    unsigned int _connectionState;
    NSDate *_hasEverAttemptedToConnectDate;
    MROrigin *_customOrigin;
    _Bool _hasEverAtteptedToConnectWhileInvalid;
    NSArray *_subscribedPlayerPaths;
    unsigned int _connectionOptions;
    NSMutableArray *_pendingConnectionAttempts;
    MRDeviceInfo *_deviceInfo;
    _Bool _hasFetchedGroupSessionInfo;
    MRGroupSessionToken *_groupSessionToken;
}

@property(copy, nonatomic) id /* block */ connectionStateCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *connectionStateCallbackQueue;
@property(copy, nonatomic) id /* block */ customDataCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *customDataCallbackQueue;
@property(copy, nonatomic) id /* block */ volumeCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *volumeCallbackQueue;
@property(retain, nonatomic) MRExternalOutputContextDataSource *externalOutputContext;
@property(retain, nonatomic) MRAVDistantEndpoint *distantEndpoint;
@property(retain, nonatomic) NSXPCConnection *hostedExternalDeviceConnection;
@property(readonly, nonatomic) NSXPCListenerEndpoint *listenerEndpoint;
@property(readonly, nonatomic) _Bool hasEverAttemptedToConnect;
@property(readonly, nonatomic) unsigned long long callbacks;
@property(readonly, nonatomic) unsigned long long notifications;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)clientInterface;
+ (id)serviceInterface;

/* instance methods */
- (void)dealloc;
- (id)name;
- (_Bool)isValid;
- (long long)port;
- (id)uid;
- (id)hostName;
- (unsigned int)connectionState;
- (id)deviceInfo;
- (_Bool)isPaired;
- (void)disconnect:(id)disconnect;
- (void)setOutputDeviceVolume:(float)volume
              outputDeviceUID:(id)uid
                      details:(id)details
                        queue:(id)queue
                   completion:(id /* block */)completion;
- (void)adjustOutputDeviceVolume:(long long)volume
                 outputDeviceUID:(id)uid
                         details:(id)details
                           queue:(id)queue
                      completion:(id /* block */)completion;
- (void)connectWithOptions:(unsigned int)options
                  userInfo:(id)info
                completion:(id /* block */)completion;
- (void)createHostedEndpointWithOutputDeviceUIDs:(id)uids
                                           queue:(id)queue
                                      completion:(id /* block */)completion;
- (id)customOrigin;
- (void)discoveryOutputDevicesChanged:(id)changed forConfiguration:(id)configuration;
- (id)groupSessionToken;
- (void)hostedExternalDeviceConnectionStateDidChange:(unsigned int)change withError:(id)error;
- (void)hostedExternalDeviceDeviceInfoDidChange:(id)change;
- (void)hostedExternalDeviceDidAddOutputDevice:(id)device;
- (void)hostedExternalDeviceDidChangeOutputDevice:(id)device;
- (void)hostedExternalDeviceDidReceiveCustomData:(id)data withName:(id)name;
- (void)hostedExternalDeviceDidRemoveOutputDevice:(id)device;
- (void)hostedExternalDeviceEndpointDidChange:(id)change;
- (void)hostedExternalDeviceGroupSessionTokenDidChange:(id)change;
- (void)hostedExternalDeviceIsMutedDidChange:(_Bool)change forOutputDevice:(id)device;
- (void)hostedExternalDeviceVolumeCapabilitiesDidChange:(unsigned int)change
                                        forOutputDevice:(id)device;
- (void)hostedExternalDeviceVolumeDidChange:(float)change forOutputDevice:(id)device;
- (id)initWithExternalDeviceListenerEndpoint:(id)endpoint endpoint:(id)endpoint;
- (_Bool)isUsingSystemPairing;
- (void)modifyTopologyWithRequest:(id)request
                   withReplyQueue:(id)queue
                       completion:(id /* block */)completion;
- (void)muteOutputDeviceVolume:(_Bool)volume
               outputDeviceUID:(id)uid
                       details:(id)details
                         queue:(id)queue
                    completion:(id /* block */)completion;
- (void)outputDeviceVolume:(id)volume queue:(id)queue completion:(id /* block */)completion;
- (void)outputDeviceVolumeControlCapabilities:(id)capabilities
                                        queue:(id)queue
                                   completion:(id /* block */)completion;
- (id)personalOutputDevices;
- (void)ping:(double)ping callback:(id /* block */)callback withQueue:(id)queue;
- (void)sendButtonEvent:(struct _MRHIDButtonEvent {
    unsigned int x0;
    unsigned int x1;
    _Bool x2;
})event;
- (void)sendCustomData:(id)data withName:(id)name;
- (void)setConnectionStateCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setConversationDetectionEnabled:(_Bool)enabled
                        outputDeviceUID:(id)uid
                                  queue:(id)queue
                             completion:(id /* block */)completion;
- (void)setCustomDataCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setDiscoveryMode:(unsigned int)mode forConfiguration:(id)configuration;
- (void)setListeningMode:(id)mode
         outputDeviceUID:(id)uid
                   queue:(id)queue
              completion:(id /* block */)completion;
- (void)setNameCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setPairingAllowedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setPairingCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setSubscribedPlayerPaths:(id)paths;
- (void)setVolumeCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setWantsEndpointChangeNotifications:(_Bool)notifications;
- (void)setWantsNowPlayingArtworkNotifications:(_Bool)notifications;
- (void)setWantsNowPlayingNotifications:(_Bool)notifications;
- (void)setWantsOutputDeviceNotifications:(_Bool)notifications;
- (void)setWantsSystemEndpointNotifications:(_Bool)notifications;
- (void)setWantsVolumeNotifications:(_Bool)notifications;
- (id)subscribedPlayerPaths;
- (id)supportedMessages;
- (_Bool)wantsEndpointChangeNotifications;
- (_Bool)wantsNowPlayingArtworkNotifications;
- (_Bool)wantsNowPlayingNotifications;
- (_Bool)wantsOutputDeviceNotifications;
- (_Bool)wantsSystemEndpointNotifications;
- (_Bool)wantsVolumeNotifications;

@end

#endif /* MRDistantExternalDevice_h */
