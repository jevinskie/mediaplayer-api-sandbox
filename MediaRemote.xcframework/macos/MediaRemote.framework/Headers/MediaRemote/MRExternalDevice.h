//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.508, BuildCommit: 5831334d9)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.440.1.0.0
//
#ifndef MRExternalDevice_h
#define MRExternalDevice_h
@import Foundation;

#include "MRDeviceInfo.h"
#include "MRGroupSessionToken.h"
#include "MROrigin.h"
#include "MRSupportedProtocolMessages.h"

@interface MRExternalDevice : NSObject {
    /* instance variables */
    NSMutableDictionary *_discoveryOutputDevicesCallbacks;
    NSMutableDictionary *_discoveryConfigurations;
    NSMutableDictionary *_discoveryModes;
}

@property(readonly, nonatomic) MRSupportedProtocolMessages *supportedMessages;
@property(nonatomic) _Bool usingSystemPairing;
@property(nonatomic) long long connectionRecoveryBehavior;
@property(readonly, nonatomic) _Bool supportsIdleDisconnection;
@property(readonly, nonatomic) _Bool supportsExternalDiscovery;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) NSString *hostName;
@property(readonly, nonatomic) long long port;
@property(readonly, nonatomic) MROrigin *customOrigin;
@property(readonly, nonatomic) NSString *uid;
@property(readonly, nonatomic) MRDeviceInfo *deviceInfo;
@property(readonly, nonatomic) NSArray *personalOutputDevices;
@property(readonly, nonatomic) MRGroupSessionToken *groupSessionToken;
@property(nonatomic) _Bool wantsNowPlayingNotifications;
@property(nonatomic) _Bool wantsNowPlayingArtworkNotifications;
@property(nonatomic) _Bool wantsVolumeNotifications;
@property(nonatomic) _Bool wantsOutputDeviceNotifications;
@property(nonatomic) _Bool wantsSystemEndpointNotifications;
@property(nonatomic) _Bool wantsEndpointChangeNotifications;
@property(copy, nonatomic) NSArray *subscribedPlayerPaths;
@property(readonly, nonatomic) _Bool valid;
@property(readonly, nonatomic) _Bool connected;
@property(readonly, nonatomic) unsigned int connectionState;
@property(readonly, nonatomic) _Bool paired;

/* instance methods */
- (_Bool)isValid;
- (id)_init;
- (_Bool)isConnected;
- (_Bool)isPaired;
- (void)disconnect:(id)disconnect;
- (void)setOutputDeviceVolume:(float)volume
              outputDeviceUID:(id)uid
                      details:(id)details
                        queue:(id)queue
                   completion:(id /* block */)completion;
- (void)adjustOutputDeviceVolume:(long long)volume
                 outputDeviceUID:(id)uid
                         details:(id)details
                           queue:(id)queue
                      completion:(id /* block */)completion;
- (void)connectWithOptions:(unsigned int)options;
- (void)connectWithOptions:(unsigned int)options userInfo:(id)info;
- (void)connectWithOptions:(unsigned int)options
                  userInfo:(id)info
                completion:(id /* block */)completion;
- (void)createHostedEndpointWithOutputDeviceUIDs:(id)uids
                                           queue:(id)queue
                                      completion:(id /* block */)completion;
- (id)currentClientUpdatesConfigMessage;
- (id)discoveryDescription;
- (id)errorForCurrentState;
- (_Bool)isUsingSystemPairing;
- (void)modifyTopologyWithRequest:(id)request
                   withReplyQueue:(id)queue
                       completion:(id /* block */)completion;
- (void)muteOutputDeviceVolume:(_Bool)volume
               outputDeviceUID:(id)uid
                       details:(id)details
                         queue:(id)queue
                    completion:(id /* block */)completion;
- (void)notifyDiscoveryOutputDevicesChanged:(id)changed forConfiguration:(id)configuration;
- (void)outputDeviceVolume:(id)volume queue:(id)queue completion:(id /* block */)completion;
- (void)outputDeviceVolumeControlCapabilities:(id)capabilities
                                        queue:(id)queue
                                   completion:(id /* block */)completion;
- (void)ping:(double)ping callback:(id /* block */)callback withQueue:(id)queue;
- (id)registerDiscoveryTokenForConfiguration:(id)configuration;
- (void)removeFromParentGroup:(id)group queue:(id)queue completion:(id /* block */)completion;
- (void)sendButtonEvent:(struct _MRHIDButtonEvent {
    unsigned int x0;
    unsigned int x1;
    _Bool x2;
})event;
- (void)sendClientUpdatesConfigMessage;
- (void)sendCustomData:(id)data withName:(id)name;
- (void)setConnectionStateCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setConversationDetectionEnabled:(_Bool)enabled
                        outputDeviceUID:(id)uid
                                  queue:(id)queue
                             completion:(id /* block */)completion;
- (void)setCustomDataCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setDiscoveryMode:(unsigned int)mode forConfiguration:(id)configuration;
- (void)setDiscoveryMode:(unsigned int)mode forToken:(id)token;
- (void)setDiscoveryOutputDevicesChangedCallback:(id /* block */)callback forToken:(id)token;
- (void)setGroupSessionTokenCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setListeningMode:(id)mode
         outputDeviceUID:(id)uid
                   queue:(id)queue
              completion:(id /* block */)completion;
- (void)setNameCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setOutputDeviceVolume:(float)volume
              outputDeviceUID:(id)uid
                        queue:(id)queue
                   completion:(id /* block */)completion;
- (void)setOutputDevicesRemovedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setOutputDevicesUpdatedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setPairingAllowedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setPairingCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeChangedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeControlCapabilitiesCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeMutedChangedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)unregisterDiscoveryToken:(id)token;

@end

#endif /* MRExternalDevice_h */
