//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.508, BuildCommit: 5831334d9)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.440.1.0.0
//
#ifndef MRCoreUtilsPairingSession_h
#define MRCoreUtilsPairingSession_h
@import Foundation;

#include "MRCryptoPairingSession.h"
#include "MRDeviceInfo.h"
#include "MRPasscodeCredentials.h"

@protocol OS_dispatch_queue;

@interface MRCoreUtilsPairingSession : MRCryptoPairingSession {
    /* instance variables */
    MRPasscodeCredentials *_credentials;
    struct PairingSessionPrivate *_pairingSession;
    struct {
        void *context;
        void * /* function */ showSetupCode_f;
        void * /* function */ hideSetupCode_f;
        void * /* function */ promptForSetupCode_f;
        void * /* function */ copyIdentity_f;
        void * /* function */ findPeer_f;
        void * /* function */ savePeer_f;
        void * /* function */ resumeRequest_f;
        void * /* function */ resumeResponse_f;
    } _pairingDelegate;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSData *inputKey;
@property(retain, nonatomic) NSMutableData *inputNonce;
@property(retain, nonatomic) NSData *outputKey;
@property(retain, nonatomic) NSMutableData *outputNonce;
@property(readonly, nonatomic) MRDeviceInfo *pairedPeerDevice;
@property(readonly, nonatomic) NSArray *pairedPeerDevices;
@property(readonly, nonatomic) NSMutableDictionary *mediaRemotePairedDevices;
@property(readonly, nonatomic) NSString *peerIdentifier;
@property(readonly, nonatomic) unsigned long long state;
@property(readonly, nonatomic) _Bool hasExchangedMessage;
@property(nonatomic) unsigned int pairingFlags;

/* instance methods */
- (void)dealloc;
- (_Bool)isValid;
- (void)close;
- (void)open;
- (id)pairedDevices;
- (_Bool)isPaired;
- (id)addPeer;
- (_Bool)shouldAutoRetryPairingExchange:(id)exchange;
- (void)handlePairingFailureWithStatus:(int)status;
- (id)decryptData:(id)data withError:(id *)error;
- (_Bool)deleteIdentityWithError:(id *)error;
- (id)encryptData:(id)data withError:(id *)error;
- (void)handlePairingExchangeData:(id)data completion:(id /* block */)completion;
- (id)initWithRole:(unsigned long long)role device:(id)device;
- (id)initializePairingSession:(struct PairingSessionPrivate *)session;
- (void)openInState:(unsigned long long)state;
- (id)removePeer;
- (id)updatePeer;

@end

#endif /* MRCoreUtilsPairingSession_h */
