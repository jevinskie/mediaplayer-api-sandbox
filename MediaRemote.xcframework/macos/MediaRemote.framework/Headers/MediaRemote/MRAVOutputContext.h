//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.508, BuildCommit: 5831334d9)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.440.1.0.0
//
#ifndef MRAVOutputContext_h
#define MRAVOutputContext_h
@import Foundation;

#include "MRAVOutputDevice.h"

@interface MRAVOutputContext : NSObject {
    /* instance variables */
    _Bool _postOutputDeviceChangedScheduled;
    _Bool _postOutputDevicesChangedScheduled;
    _Bool _postChangedScheduled;
}

@property(retain, nonatomic) NSArray *outputDevices;
@property(readonly, nonatomic) NSString *uniqueIdentifier;
@property(readonly, nonatomic) NSString *contextID;
@property(readonly, nonatomic) unsigned int type;
@property(readonly, nonatomic) NSArray *outputDevicesSnapshot;
@property(readonly, nonatomic) NSArray *outputDeviceUIDs;
@property(readonly, nonatomic) _Bool containsLocalDevice;
@property(readonly, nonatomic) NSArray *personalDevices;
@property(readonly, nonatomic) NSArray *personalDeviceUIDs;
@property(readonly, nonatomic) unsigned int volumeControlCapabilities;
@property(readonly, nonatomic) _Bool volumeControlAvailable;
@property(readonly, nonatomic) _Bool supportsVolumeControl;
@property(readonly, nonatomic) MRAVOutputDevice *predictedOutputDevice;
@property(nonatomic) float volume;
@property(nonatomic) _Bool volumeMuted;
@property(readonly, nonatomic) _Bool supportsMultipleBluetoothOutputDevices;

/* class methods */
+ (id)notificationQueue;
+ (id)sharedSystemAudioContext;
+ (id)sharedSystemScreenContext;
+ (id)iTunesContext;
+ (id)sharedAudioPresentationContext;

/* instance methods */
- (void)resetPredictedOutputDevice;
- (void)_compareOutputDeviceList:(id)list withNewOutputDeviceList:(id)list;
- (void)_notfiyOutputDeviceRemoved:(id)removed;
- (void)_notifyChangesInOutputDevicesWithAdded:(id)added
                                       removed:(id)removed
                                       updated:(id)updated
                                      previous:(id)previous
                                    newDevices:(id)devices;
- (void)_notifyOutputDeviceAdded:(id)added;
- (void)_notifyOutputDeviceChanged:(id)changed;
- (void)_reloadOutputDevices;
- (void)_reloadWithOutputDevices:(id)devices;
- (void)_scheduleOutputContextDeviceDidChangeNotification;
- (void)_scheduleOutputContextDevicesDidChangeNotification;
- (void)_scheduleOutputContextDidChangeNotification;
- (void)addOutputDevices:(id)devices
               initiator:(id)initiator
               fadeAudio:(_Bool)audio
       withCallbackQueue:(id)queue
                   block:(id /* block */)block;
- (void)addOutputDevices:(id)devices
               initiator:(id)initiator
       withCallbackQueue:(id)queue
                   block:(id /* block */)block;
- (void)addOutputDevices:(id)devices withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)adjustVolume:(long long)volume details:(id)details;
- (_Bool)containsOutputDevice:(id)device;
- (_Bool)containsOutputDeviceUID:(id)uid;
- (_Bool)isVolumeControlAvailable;
- (_Bool)isVolumeMuted;
- (void)modifyTopologyWithRequest:(id)request
                   withReplyQueue:(id)queue
                       completion:(id /* block */)completion;
- (id)outputDeviceForUID:(id)uid;
- (void)removeAllOutputDevicesWithCallbackQueue:(id)queue block:(id /* block */)block;
- (void)removeOutputDevices:(id)devices
                  initiator:(id)initiator
                  fadeAudio:(_Bool)audio
          withCallbackQueue:(id)queue
                      block:(id /* block */)block;
- (void)removeOutputDevices:(id)devices
                  initiator:(id)initiator
          withCallbackQueue:(id)queue
                      block:(id /* block */)block;
- (void)removeOutputDevices:(id)devices withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)setOutputDevices:(id)devices
               initiator:(id)initiator
                password:(id)password
               fadeAudio:(_Bool)audio
       withCallbackQueue:(id)queue
                   block:(id /* block */)block;
- (void)setOutputDevices:(id)devices
               initiator:(id)initiator
       withCallbackQueue:(id)queue
                   block:(id /* block */)block;
- (void)setOutputDevices:(id)devices withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)setOutputDevices:(id)devices
            withPassword:(id)password
       withCallbackQueue:(id)queue
                   block:(id /* block */)block;
- (void)setVolume:(float)volume details:(id)details;
- (void)setVolumeMuted:(_Bool)muted details:(id)details;
- (_Bool)shouldLog;

@end

#endif /* MRAVOutputContext_h */
